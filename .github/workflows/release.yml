name: release

on:
  push:
  #   branches:
  #     - "master"
  #     - "develop"

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-on-windows:
    runs-on: windows-latest

    steps:
    - name: Setup repository
      uses: actions/checkout@v3

    # Setup (Rust)
    - name: Setup rust toolschain
      run: rustup target add x86_64-pc-windows-msvc
    
    # Setup (Node.js)
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Setup npm modules
      run: npm install
      working-directory: ./tools/view

    # Build 
    - name: Build React project
      run: npm run build
      working-directory: ./tools/view

    - name: Build Rust project
      run: cargo build --release --target=x86_64-pc-windows-msvc
      env:
        DONT_BUILD_REACT:
        RUSTFLAGS: -C target-feature=+crt-static

    # Upload artifact
    - name: Make package
      run: powershell Compress-Archive -Path target/x86_64-pc-windows-msvc/release/sysdc.exe -DestinationPath SysDC-x86_64-windows.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Windows
        path: ./SysDC-x86_64-windows.zip

  build-on-macos:
    runs-on: macos-latest

    steps:
    - name: Setup repository
      uses: actions/checkout@v3

    # Setup (Rust)
    - name: Setup rust toolschain
      run: rustup target add x86_64-apple-darwin
    
    # Setup (Node.js)
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Setup npm modules
      run: npm install
      working-directory: ./tools/view

    # Build
    - name: Build
      run: cargo build --release --target=x86_64-apple-darwin
      env:
        DONT_BUILD_REACT:
        RUSTFLAGS: -C target-feature=+crt-static

    # Upload artifact
    - name: Make package
      run: zip --junk-paths SysDC-x86_64-macos target/x86_64-apple-darwin/release/sysdc

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: MacOS
        path: ./SysDC-x86_64-macos.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [build-on-windows, build-on-macos]

    # Create empty release
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: tmp
        release_name: tmp
        draft: true

    # Download artifacts
    - name: Download artifacts
      id: download_artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./

    # Upload to GitHub Release
    - name: Upload (Windows)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Windows/SysDC-x86_64-windows.zip
        asset_name: SysDC-x86_64-windows.zip
        asset_content_type: application/zip

    - name: Upload (MacOS)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MacOS/SysDC-x86_64-macos.zip
        asset_name: SysDC-x86_64-macos.zip
        asset_content_type: application/zip
