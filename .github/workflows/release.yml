name: release

on:
  push:
  #   branches:
  #     - "master"
  #     - "develop"

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-on-ubuntu:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: sysdc-x86_64-linux-musl
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: sysdc-windows-x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: sysdc-macos-x86_64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup repository
      uses: actions/checkout@v3

    # Setup (libraries)
    - name: Setup libraries (on Linux)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: ./.github/actions/setup_libraries

    - name: Setup musl-tools (on Linux)
      run: sudo apt install musl-dev musl-tools libstdc++6

    # Setup (Rust)
    - name: Setup rust toolschain
      run: rustup target add ${{ matrix.target }}
    
    - name: Setup rust-lld (on Linux)
      run: rustup component add llvm-tools-preview

    # Setup (Node.js)
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Setup npm modules
      run: npm install
      working-directory: ./tools/view

    # Build
    - name: Make dist dir
      run: mkdir -p ./tools/view/dist
    
    - name: Build (on Linux)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: PKG_CONFIG_SYSROOT_DIR=/ cargo build --release --target=x86_64-unknown-linux-musl

    - name: Build (on Windows)
      if: matrix.target == 'x86_64-pc-windows-msvc'
      run: cargo build --release --target=x86_64-pc-windows-msvc

    - name: Build (on MacOS)
      if: matrix.target == 'x86_64-apple-darwin'
      run: cargo build --release --target=x86_64-apple-darwin

    # Create GitHub Release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: tmp
        release_name: tmp

    - name: Upload
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/sysdc
        asset_name: ${{ matrix.name }}
